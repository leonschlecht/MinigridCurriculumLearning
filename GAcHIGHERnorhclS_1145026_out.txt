------------Cluster Job Start-----------------------
srun: defined options
srun: -------------------- --------------------
srun: (null)              : nox
srun: cpus-per-task       : 2
srun: jobid               : 1145026
srun: job-name            : noRHCL
srun: mem                 : 24G
srun: nodes               : 1
srun: verbose             : 1
srun: -------------------- --------------------
srun: end of defined options
srun: jobid 1145026: nodes(1):`nox', cpu counts: 2(x1)
srun: launch/slurm: launch_p_step_launch: CpuBindType=(null type)
srun: launching StepId=1145026.0 on host nox, 1 tasks: 0
srun: route/default: init: route default plugin loaded
srun: launch/slurm: _task_start: Node nox, 1 tasks started
pygame 2.4.0 (SDL 2.26.4, Python 3.10.9)
Hello from the pygame community. https://www.pygame.org/contribute.html
Using DoorKey
MiniGrid-DoorKey-6x6-custom-diff1.0
MiniGrid-DoorKey-8x8-custom-diff1.0
MiniGrid-DoorKey-10x10-custom-diff1.0
MiniGrid-DoorKey-12x12-custom-diff1.0
Device: cpu
Creating model. . .
ACModel(
  (image_conv): Sequential(
    (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 64, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
  )
  (actor): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=7, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)
Created model 100k_1step_3gen_5curric_Door_noRS_s1/epoch_0

The training will go on for 51 epochs, seed: 1

Traceback (most recent call last):
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/trainCurriculum.py", line 62, in <module>
    main()
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/trainCurriculum.py", line 51, in main
    e.startCurriculumTraining()
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/curricula/RollingHorizon.py", line 74, in startCurriculumTraining
    self.executeOneEpoch(epoch)
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/curricula/RollingHorizonEvolutionaryAlgorithm.py", line 79, in executeOneEpoch
    res = minimize(curricProblem,
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/optimize.py", line 67, in minimize
    res = algorithm.run()
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/algorithm.py", line 141, in run
    self.next()
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/algorithm.py", line 161, in next
    self.evaluator.eval(self.problem, infills, algorithm=self)
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/evaluator.py", line 69, in eval
    self._eval(problem, pop[I], evaluate_values_of, **kwargs)
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/evaluator.py", line 90, in _eval
    out = problem.evaluate(X, return_values_of=evaluate_values_of, return_as_dictionary=True, **kwargs)
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/problem.py", line 187, in evaluate
    _out = self.do(X, return_values_of, *args, **kwargs)
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/problem.py", line 229, in do
    self._evaluate_vectorized(X, out, *args, **kwargs)
  File "/home/schlecht/tmp/Anaconda/home/schlecht/AnacondaNeu/lib/python3.10/site-packages/pymoo/core/problem.py", line 237, in _evaluate_vectorized
    self._evaluate(X, out, *args, **kwargs)
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/curricula/curriculumProblem.py", line 34, in _evaluate
    rewards = self.rheaObj.trainEveryCurriculum(x, self.gen)
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/curricula/RollingHorizonEvolutionaryAlgorithm.py", line 110, in trainEveryCurriculum
    curricula = self.evolXToCurriculum(evolX)
  File "/home/schlecht/nobackup/MinigridCurriculumLearning/curricula/RollingHorizonEvolutionaryAlgorithm.py", line 157, in evolXToCurriculum
    assert len(curriculumList) == self.numCurric
AssertionError
srun: launch/slurm: _task_finish: Received task exit notification for 1 task of StepId=1145026.0 (status=0x0100).
srun: error: nox: task 0: Exited with exit code 1
---------- Cluster Job End ---------------------
